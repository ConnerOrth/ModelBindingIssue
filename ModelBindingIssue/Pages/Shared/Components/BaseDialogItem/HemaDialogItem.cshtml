@model HemaDialogItemViewModel
<partial name="_BaseDialogItem" model="Model" />
<h3 class="text-center">HemaStatusMapping</h3>
@* change this to a component which dynamically is able to add more segments *@
@if (Model.Mappings.Count == 0)
{
    <div class="form-row">
        <div class="form-group col-6">
            <label asp-for="Mappings.First().ResponseStatus" class="control-label"></label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text"><i class="fas fa-comment"></i></div>
                </div>
                <input asp-for="Mappings.FirstOrDefault().ResponseStatus" class="form-control" placeholder="Please enter a response text." />
            </div>

            <span asp-validation-for="Mappings.FirstOrDefault().ResponseStatus" class="text-danger"></span>
        </div>
        <div class="form-group col-6">
            <label asp-for="Mappings.First().InputStatuses" class="control-label"></label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text"><i class="fas fa-comment-dots"></i></div>
                </div>
                <input asp-for="Mappings.FirstOrDefault().InputStatuses" class="form-control" placeholder="Please enter all statuses which should map to this response." />
            </div>

            <span asp-validation-for="Mappings.FirstOrDefault().InputStatuses" class="text-danger"></span>
        </div>
    </div>
}
else
{
    for (int i = 0; i < Model.Mappings.Count; i++)
    {
        <div class="form-row">
            <div class="form-group col-6">
                <label asp-for="Mappings[i].ResponseStatus" class="control-label"></label>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text"><i class="fas fa-comment"></i></div>
                    </div>
                    <input asp-for="Mappings[i].ResponseStatus" class="form-control" />
                </div>
                <span asp-validation-for="Mappings[i].ResponseStatus" class="text-danger"></span>
            </div>
            <div class="form-group col-6">
                <label asp-for="Mappings[i].InputStatuses" class=" control-label"></label>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text"><i class="fas fa-comment-dots"></i></div>
                    </div>
                    <input asp-for="Mappings[i].InputStatuses" class="form-control" readonly />
                    @*value="@(string.Join(';', Model.Mappings[i].InputStatuses))" *@
                    <div class="input-group-append">
                        <button class="btn btn-primary btn-primary-icon m-0 pl-3 pr-4 h-100" type="button"
                                onclick="showListModal(this, ';')"
                                data-modal="#InputStatussesModal"
                                data-input="#DialogItem_Mappings_@(i)__InputStatuses">
                            <i class="fas fa-list-ul"></i>
                        </button>
                    </div>
                </div>
                @*@for (int j = 0; j < Model.Mappings[i].InputStatuses.Count; j++)
                    {
                        <label asp-for="@Model.Mappings[i].InputStatuses[j]" class="control-label"></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <div class="input-group-text"><i class="fas fa-comment-dots"></i></div>
                            </div>
                            <input asp-for="@Model.Mappings[i].InputStatuses[j]" class="form-control" readonly />
                        </div>
                        <span asp-validation-for="@Model.Mappings[i].InputStatuses[j]" class="text-danger"></span>
                    }*@
            </div>
        </div>
    }
    <div class="modal fade" id="InputStatussesModal" tabindex="-1" role="dialog" aria-labelledby="InputStatussesModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="InputStatussesModalLabel">Input Statusses <span></span></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-body"></div>
                    <button type="button" class="btn ml-auto mt-3" onclick="addStatusInput(this)" data-toggle="tooltip" title="Add new input"><i class="fas fa-plus"></i></button>
                </div>
                <div class="modal-footer">
                    <input type="hidden" name="inputStatusId" id="inputStatusId" value="" />
                    <button type="button" class="btn btn-link" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="hideListModal(this, ';')">Done</button>
                </div>
            </div>
        </div>
    </div>
    <div class="col-1 ml-auto">
        <a class="btn btn-primary-circle ml-auto" role="button" data-toggle="tooltip" title="Add new row">
            <i class="fas fa-plus"></i>
        </a>
    </div>
}
